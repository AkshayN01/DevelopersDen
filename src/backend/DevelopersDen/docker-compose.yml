version: "3.8"

services:
  developersden.database:
    container_name: developersden.database
    image: postgres
    restart: unless-stopped
    env_file:
      - database.env
    ports:
      - "5439:5432"
    networks:
      - webnet
  developersden.api:
    image: ${DOCKER_REGISTRY-}developersden.api
    user: root
    container_name: developersden.api
    restart: unless-stopped
    build:
      context: ../DevelopersDen
      dockerfile: ./DevelopersDen.API/Dockerfile
    expose:
      - "8080"
      - "8081"
    volumes:
      - /home/akshayn/DevelopersDen/aspnetapp.pfx:/https/aspnetapp.pfx:ro
    depends_on:
      - developersden.database
    networks:
      - webnet
  developersden.web:
    container_name: developersden.web
    restart: unless-stopped
    build:
     context: ./DevelopersDen.Client
     dockerfile: ./Dockerfile
    expose:
      - '80'
    depends_on:
      - developersden.api
    networks:
      - webnet
  developersden.nginx:
    image: nginx:latest
    container_name: developersden.nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - /home/akshayn/DevelopersDen/akshaynambly_info_chain.crt:/etc/ssl/certs/akshaynambly_info_chain.crt
      - /home/akshayn/DevelopersDen/akshaynambly_info.key:/etc/ssl/private/akshaynambly_info.key
    depends_on:
      - developersden.api
      - developersden.web
    networks:
      - webnet
networks:
  webnet: